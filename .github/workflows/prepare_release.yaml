# This workflow will do a clean install of node dependencies, build the source code and run tests across different versions of node
# For more information see: https://help.github.com/actions/language-and-framework-guides/using-nodejs-with-github-actions

name: Prepare Release

on:
  push:
    branches: [ master ]
  pull_request:
    branches: [ master ]

jobs:
  build:
    if:  github.event_name == 'pull_request'
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-latest, windows-latest]
    steps:
      - uses: actions/checkout@v2
      - name: Install Node
        uses: actions/setup-node@v1
        with:
          node-version: "14"
      - run: npm ci
      - run: npm run make

  release:
    if: github.event_name == 'push'
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - name: Use Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v1
        with:
          node-version: '14'
      - run: npm ci
      - name: Test
        run: npm test
      - name: Build
        run: npm run make
      - name: Create Changelog
        id: changelog
        uses: TriPSs/conventional-changelog-action@v3
        with:
          github-token: ${{ secrets.github_token }}
          output-file: "false"
      - name: Create Release
        id: create_release
        uses: actions/create-release@v1
        if: ${{ steps.changelog.outputs.skipped == 'false' }}
        env:
          GITHUB_TOKEN: ${{ secrets.github_token }}
        with:
          tag_name: ${{ steps.changelog.outputs.tag }}
          release_name: ${{ steps.changelog.outputs.tag }}
          body: ${{ steps.changelog.outputs.clean_changelog }}
      - name: Dispatch release
        uses: peter-evans/repository-dispatch@v1
        if: ${{ step.changelog.outputs.skipped == 'false' }}
        with:
          token: ${{ secrets.PAT_DISPATCH }}
          repository: cavhoo/photo-framer
          event-type: 
          client-payload: '{"upload_url": "${{ steps.create_release.outputs.upload_url }}"}'
